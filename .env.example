# 环境变量配置文件
# 请复制此文件为 .env 并填入实际值

# =============================================================================
# 网络 RPC URLs
# =============================================================================

# 以太坊主网 RPC (推荐使用 Infura 或 Alchemy)
MAINNET_RPC_URL=https://mainnet.infura.io/v3/YOUR_PROJECT_ID

# Goerli 测试网 RPC
GOERLI_RPC_URL=https://goerli.infura.io/v3/YOUR_PROJECT_ID

# Sepolia 测试网 RPC
SEPOLIA_RPC_URL=https://sepolia.infura.io/v3/YOUR_PROJECT_ID

# =============================================================================
# 私钥配置
# =============================================================================

# 部署账户私钥 (不要在生产环境中使用带有大量资金的账户)
# 格式: 0x后跟64位十六进制字符
PRIVATE_KEY=0x1234567890123456789012345678901234567890123456789012345678901234

# =============================================================================
# API Keys 用于合约验证
# =============================================================================

# Etherscan API Key (用于以太坊网络合约验证)
# 在 https://etherscan.io/apis 获取
ETHERSCAN_API_KEY=YOUR_ETHERSCAN_API_KEY

# BSCScan API Key (用于 BSC 网络合约验证)  
# 在 https://bscscan.com/apis 获取
BSCSCAN_API_KEY=YOUR_BSCSCAN_API_KEY

# =============================================================================
# Gas 报告配置
# =============================================================================

# 是否生成 Gas 使用报告
REPORT_GAS=true

# CoinMarketCap API Key (用于 Gas 费用的美元价格)
# 在 https://coinmarketcap.com/api/ 获取
COINMARKETCAP_API_KEY=YOUR_COINMARKETCAP_API_KEY

# =============================================================================
# 代币配置 (可选，用于自定义部署参数)
# =============================================================================

# 代币基本信息
TOKEN_NAME="ShibaInu Token"
TOKEN_SYMBOL="SHIB"
TOTAL_SUPPLY="1000000000000" # 1万亿代币 (18位小数)

# 钱包地址
LIQUIDITY_WALLET=0x1234567890123456789012345678901234567890
MARKETING_WALLET=0x0987654321098765432109876543210987654321

# 税率配置 (百分比)
BUY_TAX=3
SELL_TAX=5
LIQUIDITY_TAX=2
MARKETING_TAX=2
BURN_TAX=1

# 交易限制配置
MAX_TRANSACTION_PERCENT=1   # 单笔交易最大百分比 (总供应量的%)
MAX_WALLET_PERCENT=2        # 钱包最大持有百分比 (总供应量的%)
TRANSACTION_COOLDOWN=30     # 交易冷却时间 (秒)
MAX_DAILY_TRANSACTIONS=10   # 每日最大交易次数

# =============================================================================
# 获取各种 API Key 的说明
# =============================================================================

# 1. Infura Project ID:
#    - 访问 https://infura.io/
#    - 注册账户并创建新项目
#    - 在项目设置中找到 Project ID

# 2. Etherscan API Key:
#    - 访问 https://etherscan.io/
#    - 创建账户并登录
#    - 转到 https://etherscan.io/apis
#    - 点击 "Add" 创建新的 API Key

# 3. BSCScan API Key:
#    - 访问 https://bscscan.com/
#    - 创建账户并登录  
#    - 转到 https://bscscan.com/apis
#    - 点击 "Add" 创建新的 API Key

# 4. CoinMarketCap API Key:
#    - 访问 https://coinmarketcap.com/api/
#    - 注册开发者账户
#    - 在仪表板中创建 API Key

# =============================================================================
# 安全提醒
# =============================================================================

# 🚨 重要安全提醒:
# 1. 永远不要将包含真实私钥的 .env 文件提交到版本控制系统
# 2. 在生产环境中使用专门的部署钱包，不要使用个人主钱包
# 3. 部署前确保测试网络测试充分
# 4. 考虑使用硬件钱包或多签钱包进行主网部署
# 5. 定期轮换 API Keys

# =============================================================================
# 示例私钥生成 (仅用于测试网络!)
# =============================================================================

# 可以使用以下命令生成测试私钥:
# node -e "console.log('0x' + require('crypto').randomBytes(32).toString('hex'))"

# 或者使用 ethers.js:
# node -e "const { ethers } = require('ethers'); const wallet = ethers.Wallet.createRandom(); console.log('Address:', wallet.address); console.log('Private Key:', wallet.privateKey);"